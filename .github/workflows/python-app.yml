# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  health-check-job:
    runs-on: ubuntu-latest
    services:
      postgres: # we need a postgres docker image to be booted a side car service to run the tests that needs a db
        image: postgres
        env: # the environment variable must match with app/settings.py if block of DATBASES variable otherwise test will fail due to connectivity issue.
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432 # exposing 5432 port for application to use
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
  
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run Migrations # run migrations to create table in side car db container
      run: python manage.py migrate
    - name: Run Test
      run: |
        python manage.py test

  api-package-job: 
    runs-on: ubuntu-latest
    needs: [health-check-job] 
    if: ${{ github.event_name == 'push' }} 
    steps:
      - name: Checkout Code 
        uses: actions/checkout@v2
      - name: Build & Publish Image 
        uses: docker/build-push-action@v1
        env:
          app_name: apidemo
        with:
          username: ${{ secrets.DOCKER_USER }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
          dockerfile: "Dockerfile.api"
          tag_with_sha: true 
  
  worker-package-job:
    runs-on: ubuntu-latest
    needs: [health-check-job] 
    if: ${{ github.event_name == 'push' }} 
    steps:
      - name: Checkout Code 
        uses: actions/checkout@v2
      - name: Build & Publish Image 
        uses: docker/build-push-action@v1
        env:
          app_name: workerdemo
        with:
          username: ${{ secrets.DOCKER_USER }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
          dockerfile: "Dockerfile.worker"
          tag_with_sha: true 
